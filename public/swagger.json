{
    "openapi": "3.0.0",
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Retrieves a list of all categories.",
                "operationId": "indexCategories",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Add a new category",
                "description": "Creates a new category with the given data.",
                "operationId": "storeCategory",
                "requestBody": {
                    "description": "Category object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{categoryId}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a single category",
                "description": "Retrieves a specific category by its ID.",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of the category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "description": "Updates a category identified by its ID with the given data.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Category object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes a category identified by its ID.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products for REST API",
                "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "available",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a new product to the store",
                "description": "This endpoint allows for adding a new product to the store.",
                "operationId": "store",
                "requestBody": {
                    "description": "Product object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Example Product Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Example Product Description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "pending",
                                            "sold"
                                        ],
                                        "example": "available"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product from the store",
                "description": "This endpoint retrieves a specific product by its ID.",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Example Product Name"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Example Product Description"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 99.99
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ],
                                            "example": "available"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "url/to/product/image"
                                        },
                                        "types": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "type1",
                                                "type2"
                                            ]
                                        },
                                        "sizes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "small",
                                                "medium",
                                                "large"
                                            ]
                                        },
                                        "rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product in the store",
                "description": "This endpoint updates an existing product identified by its ID with the provided data.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Product object that needs to be updated in the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Product Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated Product Description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "pending",
                                            "sold"
                                        ],
                                        "example": "pending"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "url/to/updated/product/image"
                                    },
                                    "types": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "type1",
                                            "type2"
                                        ]
                                    },
                                    "sizes": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "medium",
                                            "large"
                                        ]
                                    },
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.8
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated Product Name"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Updated Product Description"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 150
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "url/to/updated/product/image"
                                        },
                                        "types": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "type1",
                                                "type2"
                                            ]
                                        },
                                        "sizes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "medium",
                                                "large"
                                            ]
                                        },
                                        "rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.8
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a specific product from the store",
                "description": "This endpoint deletes a specific product by its ID.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        }
    }
}